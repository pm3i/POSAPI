<?php

namespace heyAuto\DemoBundle\Entity;

use Doctrine\ORM\EntityRepository;
use heyAuto\DemoBundle\Entity\PosItemCostDetail;
use heyAuto\DemoBundle\Entity\PosItems;
use heyAuto\DemoBundle\Entity\PosLanguageItem;
use heyAuto\DemoBundle\Entity\PosInvoiceDetail;
use Symfony\Component\Validator\Constraints\EqualTo;
use Monolog\Logger;



/**
 * PosUserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PosInvoiceDetailRepository extends EntityRepository
{


	public function getInvoiceDetail($itemCostId, $company_code)
	{
		return $this->getEntityManager()
		->createQuery(
				" SELECT inv FROM heyAutoDemoBundle:PosInvoiceDetail inv 
				  INNER JOIN heyAutoDemoBundle:PosItemCostDetail it_c_d WITH it_c_d.items_cost_id = '".$itemCostId."'
				  INNER JOIN heyAutoDemoBundle:PosItems it WITH it.item_id = it_c_d.item_id 
				  INNER JOIN heyAutoDemoBundle:PosLanguageItem lng WITH lng.item_id = it.item_id
				  WHERE inv.company_code='".$company_code."'
				  		AND inv.item_id = it.item_id
				"
		)->getResult();
	}

	public function getPriceQuantityInInvoiceDetail($itemId, $company_code, $inv_code, $itemCostId)
	{
		return $this->getEntityManager()
		->createQuery(
				" SELECT inv_d
				  FROM heyAutoDemoBundle:PosInvoiceDetail inv_d 
				  INNER JOIN heyAutoDemoBundle:PosItems it WITH it.item_id = inv_d.item_id
				  INNER JOIN heyAutoDemoBundle:PosItemCostDetail i_c_d WITH i_c_d.items_cost_id = '".$itemCostId."'
				  WHERE inv_d.company_code= '".$company_code."'
				  		AND it.item_id = i_c_d.item_id
				  		AND inv_d.inv_code = '".$inv_code."'
				"
		)->getResult();
	}	

	public function getPriceFromItemId($itemId, $company_code)
	{
		return $this->getEntityManager()
		->createQuery(
				" SELECT i_c_d
				  FROM heyAutoDemoBundle:PosItemCostDetail i_c_d 
				  INNER JOIN heyAutoDemoBundle:PosItems it WITH it.item_id = i_c_d.item_id
				  WHERE i_c_d.item_id = '".$itemId."'
				  AND it.company_code = '".$company_code."'
				"
		)->getResult();
	}
	

	public function createNewPosInvoiceDetail(PosInvoiceDetail $posInvoiceDetail) 
	{
		
		if($posInvoiceDetail == null) {
			return array (
					'mSuccess' => false,
					'mErrorField' => null,
					'mMessage' => "Unknown error" 
			);
			
		} else {
			
			$manager = $this->getEntityManager();
			$manager->persist($posInvoiceDetail);
			$manager->flush();
			
			return array (
						'mSuccess' => true,
						'mErrorField' => null,
						'mMessage' => "Registration succeded"
			);
			
		}
	}
}
