<?php

namespace heyAuto\DemoBundle\Entity;

use Doctrine\ORM\EntityRepository;

use heyAuto\DemoBundle\Entity\PosStageITable;
use Symfony\Component\Validator\Constraints\EqualTo;
use Monolog\Logger;

/**
 * PosStageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PosStageITableRepository extends EntityRepository
{
	public function createNewPosITableStage(PosStageITable $posStageItable) 
	{
		
		if($posStageItable == null) {
			return array (
					'mSuccess' => false,
					'mErrorField' => null,
					'mMessage' => "Unknown error" 
			);
			
		} else {
			
			$manager = $this->getEntityManager();
			$manager->persist($posStageItable);
			$manager->flush();
			
			return array (
						'mSuccess' => true,
						'mErrorField' => null,
						'mMessage' => "Registration succeded"
			);
			
		}
	}

	public function deleteItableInStage($itableId) {
		return $this->getEntityManager()
		->createQuery(
				" DELETE FROM heyAutoDemoBundle:PosStageITable tb
					WHERE tb.id_itable = '".$itableId."' 
				"
		)->getResult();
	}

	public function findAllOnline()
	{
		return $this->getEntityManager()
		->createQuery(
				'SELECT p FROM heyAutoDemoBundle:User p WHERE p.online=1 ORDER BY p.username DESC'
		)->getResult();
	}
	
	
	public function findAllTableByStageId($idStage)
	{
		return $this->findBy (array('id_stage' => $idStage));	
	}
}
